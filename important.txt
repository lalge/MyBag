MONGO QUERIES
=========================================================================================================================================
Mongo Query - Dedup check make zero
------------------------------------------------------------
db.inx_cms_entity_angel.find({}).forEach(function (doc) {if(typeof doc.dt!='undefined'){for (var i = 0; i < doc.dt.length; i++) {doc.dt[i].duplicate_check=0;} db.inx_cms_entity_angel.save(doc);}});
db.inx_cms_entity_gust.find({}).forEach(function (doc) {if(typeof doc.dt!='undefined'){for (var i = 0; i < doc.dt.length; i++) {doc.dt[i].duplicate_check=0;} db.inx_cms_entity_gust.save(doc);}});
db.inx_cms_entity_startuphub.find({}).forEach(function (doc) {if(typeof doc.dt!='undefined'){for (var i = 0; i < doc.dt.length; i++) {doc.dt[i].duplicate_check=0;} db.inx_cms_entity_startuphub.save(doc);}});
db.inx_cms_entity_startupblink.find({}).forEach(function (doc) {if(typeof doc.dt!='undefined'){for (var i = 0; i < doc.dt.length; i++) {doc.dt[i].duplicate_check=0;} db.inx_cms_entity_startupblink.save(doc);}});
db.inx_cms_entity_f6s.find({}).forEach(function (doc) {if(typeof doc.dt!='undefined'){for (var i = 0; i < doc.dt.length; i++) {doc.dt[i].duplicate_check=0;} db.inx_cms_entity_f6s.save(doc);}});

Find duplicate records
-------------------------------------------------------------
db.inx_cms_company.aggregate(
    {"$group" : { "_id": "$company_name.value", "count": { "$sum": 1 } } },
    {"$match": {"_id" :{ "$ne" : null } , "count" : {"$gt": 1} } }, 
    {"$project": {"name" : "$_id", "_id" : 0} }
)

Size or Count Query
-------------------------------------------------------------
{"people_work_experience.source":{$size: 2} }


Rename all fields in mongo query
-------------------------------------------------------------
db.inx_cms_entity_f6s.update( {}, { $rename: { 'company_short_desc': 'company_whats_unique'}}, false, true )
db.inx_cms_entity_gust.update( {},{$rename: {'all_dump.comp_short_desc': 'company_whats_unique' }}, false, true )


Set & update Mongo documents
-------------------------------------------------------------
$sdata['$set'] = array('product_tab_status.taxonomy'=>1); /// Value set to fields without overwrite other fields
$sdata['$set'] = array('product_tab_status'=>array('taxonomy'=>1)); /// Value set with overwrite other fields

Check duplicate record
-------------------------------------------------------------
db.inx_cms_company.aggregate( [
      {$group : {_id : {'company_website':'$company_website.value'},
           count: { $sum: 1 }}},
            { $match: { count: { $gt: 1 } } }
   ]
)

Pull query
--------------------------------------------------------------
db.inx_cms_entity_gust.update(
  	{}, 
  	{$pull: {dt:{duplicate_check:0}}},
  	{ multi: true }
);


Copy collection one to other
--------------------------------------------------------------
db.inx_people.find().forEach(function(doc){
   db.inx_cms_people.insert(doc); // start to replace
});

Set Username and Password to the database
--------------------------------------------------------------
db.createUser(
  {
    user: "inx_uat",
    pwd: "",
    roles: [ { role: "readWrite", db: "inx_uat" }]
  }
)

Group/Distinct on two fields
--------------------------------------------------------------
db.inx_marketing_content_view.aggregate([
{$group: {_id : {email : '$contact_email',name:'$contact_name'}}},
{$project : {email : '$_id.email', name : '$_id.name', _id : 0}}
]);


Mongo Patch (IMP)
--------------------------------------------------------------
db.inx_user.find({user_email:{$in:['luis.robles@total.com', 'david.nevicato@total.com', 'laurence.marechal@total.com']}}).forEach(function (doc) {
  if(typeof doc.user_subscribe_dt != 'undefined' && typeof doc.user_type != 'undefined' ){
	var	usersub = [];
	var usertype; 
	var enddate;
	if(doc.user_type == 'Register'){
	  usertype = 'register';
	}else{
	  usertype = 'trial';
	}
	enddate = '';
	if(typeof doc.user_package.end_date != 'undefined' && doc.user_package.end_date != ''){
		enddate = doc.user_package.end_date;
	}else if(typeof doc.user_package.start_date != 'undefined' && typeof doc.user_package.package_days != 'undefined' && doc.user_package.package_days != '' && doc.user_package.package_days != 0){
		enddate = new Date (doc.user_package.start_date.getTime() + doc.user_package.package_days*24*60*60000);
	}
	

    for (var i = 0; i < doc.user_subscribe_dt.length; i++) {
      	doc.user_subscribe_dt[i].subscription_type = usertype;
      	usersub.push({
      		dt_id:doc.user_subscribe_dt[i].dt_id,
      		dt_name:doc.user_subscribe_dt[i].dt_name,	      		
      		subscription_type:usertype,
      		subscription_end_date:enddate,
      		company_profile_limit: doc.user_package.company_profile_limit,
      		max_objects_per_listing: doc.user_package.max_objects_per_listing,
      		company_profile_used: doc.user_package.company_profile_used
      	});
      } 
      doc.user_subscriptions = usersub;
      db.inx_user.save(doc);
    }
  });
  
////////////////////////////////////////////
Define end date in subscription

db.inx_user.find({'user_package.end_date':{$exists:1, $ne:''}}).forEach(function (doc) {
	  for (var i = 0; i < doc.user_subscriptions.length; i++) {
	      doc.user_subscriptions[i].subscription_end_date = doc.user_package.end_date;
	  }
	  db.inx_user.save(doc);
});  
  
ulrich.nerz@infineon.com  
////////////////////////////////////////////
Create date for subcription

db.inx_user.find({'user_subscriptions.subscription_start_date':{$exists:0}}).forEach(function (doc) {
	  for (var i = 0; i < doc.user_subscriptions.length; i++) {
	      doc.user_subscriptions[i].subscription_start_date = doc.user_created_date;
	  }
	  db.inx_user.save(doc);
});

nilesh.lathe@cheersin.comm
avanish.vasudevan@futurebridge.comm
CLarrey@lindt.comm
Siddharth.S.Singh2@shell.comm
  
Date between 
--------------------------------------------------------------
items.find({
    created_at: {
        $gte: ISODate("2010-04-29T00:00:00.000Z"),
        $lt: ISODate("2010-05-01T00:00:00.000Z")
    }
});

Date Adding/Subtracting
--------------------------------------------------------------
/// 1 day subtracting from current date
"StartDate" : { "$gte" : new Date(ISODate().getTime() - 1000 * 3600 * 24 * 1) }

User email id change
--------------------------------------------------------------
db.getCollection("inx_user").find({}).forEach(
       function(e, i){ 
           e.user_email=e.user_email+'m'; 
           db.inx_user.save(e);
       }
    )



SHELL COMMANDS
==========================================================================================================================================
In UAT SSH - Node command (Run before node script)
-------------------------------------------------------------
$ export NODE_PATH=$(npm root --quiet -g)


In UAT SSH - user Mongo shell
-------------------------------------------------------------
> mongo
> use <database_name>


For zip folder - command
-------------------------------------------------------------
$ tar -zcvf inx_uat_cms.tar.gz dump/inx_uat_cms/
$ tar xvzf file.tar.gz      ////// UNTAR


Download from server to server
-------------------------------------------------------------
$ wget â€“no-check-certificate http://185.216.76.28/downloads/AI_Data.zip

Sync and copy
-------------------------------------------------------------
$ rsync -avz company/* people/

Copy collection from one to other
-------------------------------------------------------------
$ mongoexport -d inx_cms -c sourcecollection | mongoimport -d inx_cms -c targetcollection --drop


Deploy inx_cms to UAT
-------------------------------------------------------------
$ sh /home/deployment/deployment_inx_cms_uat.sh


NODE
============================================================================================================================================
NODE_PATH (Enviroment variable)
-------------------------------------------------------------
C:\Users\suraj.varane\AppData\Roaming\npm


PHP
============================================================================================================================================
Clear html  
-------------------------------------------------------------
htmlspecialchars();

Multi-Dimention array sort with STRING
-------------------------------------------------------------
usort($allDt, function($a, $b) {
    return strcmp($a["dt_name"], $b["dt_name"]);
});

Clean HTML string 
-------------------------------------------------------------
html_entity_decode()

Check expiry date time
-------------------------------------------------------------
$start_date = date('Y-m-d', $user['user_package']['start_date']->sec);
$package_days_text = "+" . $package_days . " days";
$accountExpireDate = date('d-M-Y', strtotime($package_days_text, strtotime($start_date)));
$end_date = strtotime($accountExpireDate . ' 23:59:59');
$time = time();
if ($time > $end_date) {
	return true;
}

Add hours in date
--------------------------------------------------------------
date('Y-m-d H:i:s', strtotime('+12 hours', $myDate));

Send array in field value in POST
--------------------------------------------------------------
HTML File
<input type="hidden" name="alltrends" value="<?= htmlentities(serialize($alltrend))?>">
PHP File
$alltrends = unserialize($_POST['alltrends']);

Explode and Trim together
--------------------------------------------------------------
$new_arr = array_map('trim', explode(',', $str));

React JS
============================================================================================================================================
Install using Node JS command
- $ sudo npm i -g create-react-app@1.5.2

